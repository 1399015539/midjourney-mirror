version: '3.8'

services:
  # FlareSolverr服务 - CF绕过
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: midjourney-flaresolverr-dev
    environment:
      - LOG_LEVEL=debug
      - LOG_HTML=true
      - CAPTCHA_SOLVER=none
      - TZ=Asia/Shanghai
      - TEST_URL=https://www.midjourney.com
      - HEADLESS=true
      - BROWSER_TIMEOUT=40000
      - PROXY_RESOLVER_TIMEOUT=40000
    ports:
      - "8191:8191"
    restart: unless-stopped
    networks:
      - midjourney-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8191/v1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Midjourney Mirror主应用 (开发模式)
  midjourney-mirror:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: midjourney-mirror-dev
    environment:
      - NODE_ENV=development
      - PORT=3000
      - FLARESOLVERR_URL=http://flaresolverr:8191/v1
      - FLARESOLVERR_ENABLED=true
      - TEST_MODE=true
      - JWT_SECRET=dev-secret-key
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      - LOG_LEVEL=debug
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    ports:
      - "3000:3000"
    depends_on:
      - flaresolverr
    restart: unless-stopped
    networks:
      - midjourney-network
    entrypoint: ["sh", "-c"]
    command: 
      - |
        echo "Starting Midjourney Mirror..."
        cd /app
        npm install
        npm run dev
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  midjourney-network:
    driver: bridge